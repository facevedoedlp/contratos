{
  "openapi": "3.0.1",
  "info": {
    "title": "Zubeldia",
    "description": ".NET 8 API Backend",
    "version": "v1"
  },
  "paths": {
    "/api/authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/authentication/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/contract": {
      "get": {
        "tags": [
          "Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "PlayerId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/ContractTypeEnum"
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "PlayerId": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Type": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contract"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "PlayerId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Type": {
                    "$ref": "#/components/schemas/ContractTypeEnum"
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "PlayerId": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                },
                "Type": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorResultDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContractTypeEnum": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Error": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "attemptedValue": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidatorResultDto": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "entityNumber": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Using the Authorization header with the Bearer scheme.",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [
        "Bearer"
      ]
    }
  ]
}